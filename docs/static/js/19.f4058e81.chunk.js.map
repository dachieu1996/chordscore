{"version":3,"sources":["assets/section-button-icon.svg","components/SectionMenu.ts","assets/default-cover.svg","components/MainSectionGrid.tsx","pages/Root.tsx"],"names":["React","SectionButtonIcon","props","createElement","defaultProps","module","exports","default","SectionMenu","styled","button","active","css","DefaultCover","Container","div","checked","AbsoluteBox","SmallRank","Image","img","DefaultCoverWrap","Rank","span","InfoWrap","Title","Artist","MainSectionGrid","id","image","className","title","artist","rank","screenWidth","onClick","isDraging","history","useHistory","isSmallScreen","useState","isLoaded","setIsLoaded","push","src","onLoad","Root","newData","setNewData","popularitiesData","setPopularitiesData","filter","setFilter","useWindowSize","width","isNewDraging","setIsNewDraging","isPopDraging","setIsPopDraging","setImage","isAlbumOneRow","useMemo","length","isRankOneRow","useEffect","a","api","get","params","popularity_type","data","fetchedNewData","new","fetchedPopularitiesData","popularities","fetchData","image_url","banner","console","log","carousel","Flickity","pageDots","setGallerySize","prevNextButtons","cellAlign","contain","draggable","freeScroll","on","setTimeout","StyledServiceWrapper","headerPosition","bodyBackgroundColor","ContentsWrap","MainImageWrapper","MainImage","style","backgroundImage","Section","SectionHeadWrap","SectionHeader","SectionButton","SectionButtonIconWrap","SectionButtonText","CarouselWrapper","SectionContentsWrap","map","album","key","singer","reduce","accumulator","currentValue","currentIndex","array","albums","albumGroupIndex","AlbumGroup","SectionTitle","SectionMenuWrap","StyledSectionMenu","AlbumRowWrapper","albumIndex","AlbumRow","h2","ServiceWrapper"],"mappings":"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","file":"static/js/19.f4058e81.chunk.js","sourcesContent":["var React = require('react');\n\nfunction SectionButtonIcon (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"fill\":\"#1E1E1E\",\"fillRule\":\"evenodd\",\"d\":\"M6.597 5.403V.597C6.597.267 6.33 0 6 0c-.33 0-.597.267-.597.597v4.806H.597C.267 5.403 0 5.67 0 6c0 .33.267.597.597.597h4.806v4.806c0 .33.267.597.597.597.33 0 .597-.267.597-.597V6.597h4.806c.33 0 .597-.267.597-.597 0-.33-.267-.597-.597-.597H6.597z\"}));\n}\n\nSectionButtonIcon.defaultProps = {\"width\":\"12\",\"height\":\"12\",\"viewBox\":\"0 0 12 12\"};\n\nmodule.exports = SectionButtonIcon;\n\nSectionButtonIcon.default = SectionButtonIcon;\n","import styled from '@emotion/styled';\nimport css from '@emotion/css';\n\nconst SectionMenu = styled.button<{ active: boolean }>`\n  outline: 0;\n  padding: 0;\n  border: 0;\n  background: none;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  text-align: right;\n  margin-left: 50px;\n  cursor: pointer;\n  ${({ active }) =>\n    active\n      ? css`\n          color: #0a62ba !important;\n        `\n      : css`\n          color: #1e1e1e;\n          opacity: 0.5;\n          html[color-mode='dark'] & {\n            color: white;\n          }\n        `}\n  @media screen and (max-width: 960px) {\n    margin-left: 35px;\n  }\n\n  @media screen and (max-width: 700px) {\n    margin-left: 15px;\n  }\n\n  @media screen and (max-width: 500px) {\n    margin-left: 30px;\n\n    &:first-of-type {\n      margin-left: 0px;\n    }\n    ${({ active }) =>\n      active\n        ? css`\n            color: #1e1e1e;\n            html[color-mode='dark'] & {\n              color: white;\n            }\n          `\n        : css`\n            color: #1e1e1e;\n            opacity: 0.5;\n            html[color-mode='dark'] & {\n              color: white;\n            }\n          `}\n  }\n`;\n\nexport default SectionMenu;\n","var React = require('react');\n\nfunction DefaultCover (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},[React.createElement(\"path\",{\"id\":\"8s2ml4bqka\",\"d\":\"M0.065 0.027L15.311 0.027 15.311 23.936 0.065 23.936z\",\"key\":0}),React.createElement(\"path\",{\"id\":\"bi9oavp1gc\",\"d\":\"M0.085 0.027L17.273 0.027 17.273 23.931 0.085 23.931z\",\"key\":1}),React.createElement(\"path\",{\"id\":\"somvp3olje\",\"d\":\"M0.02 0.019L16.812 0.019 16.812 16.621 0.02 16.621z\",\"key\":2}),React.createElement(\"path\",{\"id\":\"sm5ie3u9ng\",\"d\":\"M0.037 0.106L17.305 0.106 17.305 17.191 0.037 17.191z\",\"key\":3})]),React.createElement(\"g\",{\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",null,React.createElement(\"g\",null,React.createElement(\"g\",null,[React.createElement(\"g\",{\"fill\":\"#000\",\"fillRule\":\"nonzero\",\"opacity\":\".06\",\"key\":0},[React.createElement(\"path\",{\"d\":\"M103.919 93.117c-5.716 0-10.392 4.656-10.392 10.346s4.676 10.346 10.392 10.346c5.715 0 10.391-4.656 10.391-10.346s-4.675-10.346-10.391-10.346z\",\"transform\":\"translate(-630 -466) translate(630 466)\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M103.919 0C46.504 0 0 46.3 0 103.463s46.504 103.463 103.919 103.463c57.414 0 103.919-46.3 103.919-103.463C207.838 46.299 161.334 0 103.918 0zm0 150.021c-25.824 0-46.764-20.848-46.764-46.558s20.94-46.558 46.764-46.558c25.823 0 46.763 20.847 46.763 46.558 0 25.71-20.94 46.558-46.763 46.558z\",\"transform\":\"translate(-630 -466) translate(630 466)\",\"key\":1})]),React.createElement(\"g\",{\"opacity\":\".45\",\"key\":1},[React.createElement(\"path\",{\"fill\":\"#000\",\"d\":\"M10.63 24C4.545 24 0 19.45 0 13.409 0 7.334 4.545 2.783 10.63 2.783c5.24 0 9.298 3.493 10.11 8.615h-5.58c-.687-2.072-2.414-3.417-4.518-3.417-2.831 0-4.907 2.3-4.907 5.427 0 3.115 2.076 5.382 4.907 5.382 2.219 0 3.962-1.46 4.523-3.705h5.633C20.038 20.395 15.955 24 10.63 24z\",\"transform\":\"translate(-630 -466) translate(630 466) translate(17.41 91.228)\",\"key\":0}),React.createElement(\"g\",{\"transform\":\"translate(-630 -466) translate(630 466) translate(17.41 91.228) translate(23.105 .113)\",\"key\":1},[React.createElement(\"mask\",{\"id\":\"o3bscgf4zb\",\"fill\":\"#fff\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#8s2ml4bqka\"})),React.createElement(\"path\",{\"fill\":\"#000\",\"d\":\"M15.311 13.995v9.941H10v-9.317c0-1.797-.625-2.714-2.012-2.714-1.607 0-2.61 1.153-2.61 3.152v8.879H.066V.027h5.313v8.795c1.135-.924 2.58-1.486 4.117-1.486 3.541 0 5.816 2.62 5.816 6.66\",\"mask\":\"url(#o3bscgf4zb)\",\"key\":1})]),React.createElement(\"path\",{\"fill\":\"#000\",\"d\":\"M49.34 19.46c1.938 0 3.327-1.42 3.327-3.48 0-2.048-1.39-3.48-3.326-3.48-1.938 0-3.327 1.42-3.327 3.48s1.39 3.479 3.327 3.479zm-8.647-3.481c0-4.83 3.619-8.3 8.648-8.3 5.012 0 8.647 3.47 8.647 8.3 0 4.813-3.635 8.3-8.647 8.3-5.029 0-8.648-3.487-8.648-8.3zM134.457 19.46c1.937 0 3.326-1.42 3.326-3.48 0-2.048-1.39-3.48-3.326-3.48-1.938 0-3.327 1.42-3.327 3.48s1.39 3.479 3.327 3.479zm-8.648-3.481c0-4.83 3.619-8.3 8.648-8.3 5.012 0 8.647 3.47 8.647 8.3 0 4.813-3.635 8.3-8.647 8.3-5.03 0-8.648-3.487-8.648-8.3z\",\"transform\":\"translate(-630 -466) translate(630 466) translate(17.41 91.228)\",\"key\":2}),React.createElement(\"g\",{\"transform\":\"translate(-630 -466) translate(630 466) translate(17.41 91.228) translate(71.253 .113)\",\"key\":3},[React.createElement(\"mask\",{\"id\":\"s7b95evkdd\",\"fill\":\"#fff\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#bi9oavp1gc\"})),React.createElement(\"path\",{\"fill\":\"#000\",\"d\":\"M12.352 15.587c0-2.034-1.463-3.565-3.452-3.565-1.99 0-3.453 1.53-3.453 3.565S6.91 19.153 8.9 19.153c1.99 0 3.452-1.531 3.452-3.566zM17.273.027v23.904h-4.43l-.002-1.71c-1.255 1.066-2.856 1.683-4.652 1.683-4.733 0-8.104-3.475-8.104-8.317 0-4.842 3.371-8.3 8.104-8.3 1.424 0 2.727.387 3.832 1.081V.028h5.252z\",\"mask\":\"url(#s7b95evkdd)\",\"key\":1})]),React.createElement(\"path\",{\"fill\":\"#000\",\"d\":\"M97.807 24c-4.203 0-6.758-2.243-6.807-5.618h5.114c0 1.139.785 1.664 1.792 1.664.777 0 1.514-.401 1.514-1.206 0-.9-1.168-1.155-2.65-1.403-2.39-.391-5.561-1.12-5.561-4.899 0-3.123 2.634-5.14 6.586-5.14 3.928 0 6.473 2.111 6.533 5.268h-4.974c0-.995-.662-1.457-1.625-1.457-.852 0-1.424.426-1.424 1.148 0 .886 1.18 1.093 2.645 1.357 2.437.437 5.676.948 5.676 4.9 0 3.256-2.72 5.386-6.82 5.386h.001z\",\"transform\":\"translate(-630 -466) translate(630 466) translate(17.41 91.228)\",\"key\":4}),React.createElement(\"g\",{\"transform\":\"translate(-630 -466) translate(630 466) translate(17.41 91.228) translate(156.065 7.38)\",\"key\":5},[React.createElement(\"mask\",{\"id\":\"xvv9wnitpf\",\"fill\":\"#fff\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#somvp3olje\"})),React.createElement(\"path\",{\"fill\":\"#000\",\"d\":\"M5.343 6.621h6.235C11.112 5.064 10 4.224 8.398 4.224c-1.549 0-2.625.85-3.055 2.397zM16.81 8.172c0 .47-.04.939-.11 1.421H5.25c.348 1.787 1.472 2.711 3.149 2.711 1.24 0 2.278-.549 2.788-1.46h5.287c-1.085 3.555-4.206 5.777-8.075 5.777C3.585 16.62.02 13.067.02 8.307.02 3.531 3.557.02 8.398.02c4.971 0 8.414 3.583 8.414 8.153z\",\"mask\":\"url(#xvv9wnitpf)\",\"key\":1})]),React.createElement(\"path\",{\"fill\":\"#000\",\"d\":\"M65.282 8.457v1.02c.504-.397 1.086-.722 1.746-.978.659-.255 1.297-.382 1.915-.382h1.346v4.973h-2.02c-.757 0-1.445.284-2.062.85-.617.568-.925 1.29-.925 2.168v8.154h-4.84V8.457h4.84zM149.968 8.457v1.02c.505-.397 1.087-.722 1.747-.978.658-.255 1.297-.382 1.914-.382h1.347v4.973h-2.02c-.757 0-1.445.284-2.062.85-.617.568-.926 1.29-.926 2.168v8.154h-4.84V8.457h4.84z\",\"transform\":\"translate(-630 -466) translate(630 466) translate(17.41 91.228)\",\"key\":6}),React.createElement(\"g\",{\"transform\":\"translate(-630 -466) translate(630 466) translate(17.41 91.228) translate(106.533 7.38)\",\"key\":7},[React.createElement(\"mask\",{\"id\":\"sdy171vfph\",\"fill\":\"#fff\",\"key\":0},React.createElement(\"use\",{\"xlinkHref\":\"#sm5ie3u9ng\"})),React.createElement(\"path\",{\"fill\":\"#000\",\"d\":\"M8.814 17.19c-5.098 0-8.777-3.608-8.777-8.576C.037 3.645 3.699.106 8.83.106c4.467 0 7.817 2.845 8.416 7.116h-5.333c-.46-1.31-1.673-2.16-3.1-2.16-1.924 0-3.294 1.477-3.294 3.569 0 2.092 1.387 3.603 3.294 3.603 1.469 0 2.66-.909 3.112-2.343h5.38c-.62 4.361-4.016 7.3-8.492 7.3z\",\"mask\":\"url(#sdy171vfph)\",\"key\":1})])])]))))]);\n}\n\nDefaultCover.defaultProps = {\"viewBox\":\"0 0 208 207\"};\n\nmodule.exports = DefaultCover;\n\nDefaultCover.default = DefaultCover;\n","import React, { useState } from 'react';\nimport css from '@emotion/css';\nimport styled from '@emotion/styled';\n\nimport DefaultCover from '../assets/default-cover.svg';\nimport { useHistory } from 'react-router';\n\ninterface IPropsForChart {\n  checked?: boolean;\n  onClick?: () => void;\n}\n\ninterface IProps extends IPropsForChart {\n  id: number;\n  className?: string;\n  image: string;\n  title: string;\n  artist: string;\n  rank?: string | number;\n  screenWidth?: number;\n  isDraging?: boolean;\n}\n\nconst MainSectionGrid = ({\n  id,\n  image,\n  className,\n  title,\n  artist,\n  rank,\n  screenWidth = 1980,\n  checked = false,\n  onClick,\n  isDraging = false,\n}: IProps) => {\n  const history = useHistory();\n  const isSmallScreen = screenWidth <= 700;\n  const [isLoaded, setIsLoaded] = useState<boolean>(image ? false : true);\n  const handleClick = () => history.push(`/notes/${id}`);\n  return (\n    <Container\n      className={className || ''}\n      checked={checked}\n      onClick={!isDraging ? onClick || handleClick : () => null}\n    >\n      {rank && isSmallScreen && <SmallRank>{rank}</SmallRank>}\n      {image ? (\n        <Image src={image} onLoad={() => setIsLoaded(true)} />\n      ) : (\n        <DefaultCoverWrap>\n          <DefaultCover />\n        </DefaultCoverWrap>\n      )}\n      {isLoaded && (\n        <AbsoluteBox>\n          {rank && !isSmallScreen && <Rank>{rank}</Rank>}\n          <InfoWrap>\n            <Title>{title}</Title>\n            <Artist>{artist}</Artist>\n          </InfoWrap>\n        </AbsoluteBox>\n      )}\n    </Container>\n  );\n};\n\nconst Container = styled.div<IPropsForChart>`\n  width: 220px;\n  min-width: 220px;\n  height: 220px;\n  border-radius: 5px;\n  overflow: hidden;\n  position: relative;\n  margin-right: 18px;\n  background-color: #ffffff;\n  cursor: inherit;\n\n  @media screen and (max-width: 960px) {\n    width: 154px;\n    min-width: 154px;\n    height: 154px;\n    margin-right: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    width: 110px;\n    min-width: 110px;\n    height: 110px;\n    margin-right: 10px;\n  }\n\n  @media screen and (max-width: 500px) {\n    width: 100px;\n    min-width: 100px;\n    height: 100px;\n    margin-right: 10px;\n  }\n\n  ${({ checked }) =>\n    checked &&\n    css`\n      background-color: rgba(10, 98, 186, 0.69);\n\n      html[color-mode='dark'] & {\n        background-color: rgba(10, 10, 11, 0.35);\n      }\n    `};\n`;\n\nconst AbsoluteBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nconst SmallRank = styled.div`\n  min-width: 19px;\n  height: 18px;\n  font-size: 14px;\n  line-height: 1.14;\n  color: #1e1e1e;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin-right: 10px;\n\n  html[color-mode='dark'] & {\n    color: white;\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nconst DefaultCoverWrap = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: white;\n`;\n\nconst Rank = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 41px;\n  height: 41px;\n  background-color: #0a62ba;\n  font-size: 16px;\n  font-weight: bold;\n  color: #ffffff;\n  @media screen and (max-width: 500px) {\n    width: 22px;\n    height: 22px;\n    font-size: 13px;\n  }\n`;\n\nconst InfoWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: 68px;\n  padding: 13px 9px;\n  margin-top: auto;\n  background-color: rgba(28, 34, 48, 0.81);\n\n  @media screen and (max-width: 960px) {\n    padding: 6px 7px;\n    height: 50px;\n    justify-content: center;\n  }\n`;\n\nconst Title = styled.span`\n  width: 100%;\n  color: #ffffff;\n  margin-bottom: 5px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media screen and (max-width: 960px) {\n    font-size: 14px;\n    line-height: 1.1;\n  }\n\n  @media screen and (max-width: 700px) {\n    margin-bottom: 3px;\n    width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    html[color-mode='dark'] & {\n      color: white;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    font-size: 13px;\n  }\n`;\n\nconst Artist = styled.span`\n  opacity: 0.5;\n  color: #ffffff;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  @media screen and (max-width: 960px) {\n    font-size: 13px;\n    line-height: 1.1;\n  }\n\n  @media screen and (max-width: 700px) {\n    opacity: 0.5;\n    html[color-mode='dark'] & {\n      color: white;\n    }\n  }\n`;\n\nexport default MainSectionGrid;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport css from '@emotion/css';\nimport styled from '@emotion/styled';\n\nimport Flickity from 'flickity';\nimport 'flickity/css/flickity.css';\n\nimport ServiceWrapper from '../components/ServiceWrapper';\nimport MainSectionGrid from '../components/MainSectionGrid';\nimport SectionMenu from '../components/SectionMenu';\n\nimport SectionButtonIcon from '../assets/section-button-icon.svg';\n\nimport { IAlbum } from '../types';\nimport { api } from '../utils/api';\nimport useWindowSize from '../utils/useWindowSize';\nimport { useHistory } from 'react-router';\n\nconst Root: React.FC = () => {\n  const history = useHistory();\n  const [newData, setNewData] = useState<Array<IAlbum>>();\n  const [popularitiesData, setPopularitiesData] = useState<Array<IAlbum>>();\n  const [filter, setFilter] = useState<string>('all');\n  const { width: screenWidth = 1980 } = useWindowSize();\n  const [isNewDraging, setIsNewDraging] = useState(false);\n  const [isPopDraging, setIsPopDraging] = useState(false);\n  const [image, setImage] = useState<string>('');\n\n  const isSmallScreen = screenWidth <= 500;\n  const isAlbumOneRow = useMemo(() => (newData?.length || 0) <= 5, [newData]);\n  const isRankOneRow = useMemo(() => (popularitiesData?.length || 0) <= 5, [\n    popularitiesData,\n  ]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data: {\n          data: { new: fetchedNewData, popularities: fetchedPopularitiesData },\n        },\n      } = await api.get('/main/index', { params: { popularity_type: filter } });\n      setNewData(fetchedNewData);\n      setPopularitiesData(fetchedPopularitiesData);\n    };\n\n    fetchData();\n  }, [filter]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data: {\n          data: {\n            banner: { image_url },\n          },\n        },\n      } = await api.get('/banner');\n      setImage(image_url);\n      console.log(image_url);\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (newData) {\n      const carousel = new Flickity('.carousel-1', {\n        pageDots: false,\n        setGallerySize: true,\n        prevNextButtons: false,\n        cellAlign: 'left',\n        contain: true,\n        draggable: true,\n        freeScroll: true,\n      });\n\n      carousel.on('dragStart', () => {\n        setIsNewDraging(true);\n      });\n\n      carousel.on('dragEnd', () => {\n        setTimeout(() => {\n          setIsNewDraging(false);\n        }, 100);\n      });\n    }\n  }, [newData]);\n\n  useEffect(() => {\n    if (popularitiesData) {\n      const carousel = new Flickity('.carousel-2', {\n        pageDots: false,\n        setGallerySize: true,\n        prevNextButtons: false,\n        cellAlign: 'left',\n        contain: true,\n        draggable: true,\n        freeScroll: true,\n      });\n\n      carousel.on('dragStart', () => {\n        setIsPopDraging(true);\n      });\n\n      carousel.on('dragEnd', () => {\n        setTimeout(() => {\n          setIsPopDraging(false);\n        }, 100);\n      });\n    }\n  }, [popularitiesData]);\n\n  return (\n    <StyledServiceWrapper\n      headerPosition=\"fixed\"\n      bodyBackgroundColor=\"rgb(246,246,246)\"\n      isAlbumOneRow={isRankOneRow}\n    >\n      <ContentsWrap>\n        <MainImageWrapper>\n          <MainImage style={{ backgroundImage: `url(${image})` }} />\n        </MainImageWrapper>\n        <Section>\n          <SectionHeadWrap>\n            <SectionHeader>신규 악보</SectionHeader>\n            <SectionButton onClick={() => history.push('/recent')}>\n              <SectionButtonIconWrap>\n                <SectionButtonIcon />\n              </SectionButtonIconWrap>\n              <SectionButtonText>More</SectionButtonText>\n            </SectionButton>\n          </SectionHeadWrap>\n          <CarouselWrapper>\n            <SectionContentsWrap\n              className=\"carousel-1\"\n              screenWidth={screenWidth}\n              isAlbumOneRow={isAlbumOneRow}\n            >\n              {newData &&\n                (isAlbumOneRow\n                  ? newData.map((album) => (\n                      <MainSectionGrid\n                        key={`first-section-${album?.id}`}\n                        id={album?.id}\n                        title={album?.title}\n                        artist={album?.singer}\n                        image={album?.image_url}\n                        isDraging={isNewDraging}\n                      />\n                    ))\n                  : newData\n                      .reduce<[IAlbum, IAlbum][]>(\n                        (accumulator, currentValue, currentIndex, array) => {\n                          if (currentIndex % 2 === 0)\n                            accumulator.push([\n                              currentValue,\n                              array[currentIndex + 1],\n                            ]);\n                          return accumulator;\n                        },\n                        [],\n                      )\n                      .map((albums, albumGroupIndex) => (\n                        <AlbumGroup\n                          className=\"carousel-cell\"\n                          key={`album-group-${albumGroupIndex}`}\n                        >\n                          {albums.map((album) =>\n                            album ? (\n                              <MainSectionGrid\n                                className=\"carousel-cell\"\n                                key={`first-section-${album?.id}`}\n                                id={album?.id}\n                                title={album?.title}\n                                artist={album?.singer}\n                                image={album?.image_url}\n                                isDraging={isNewDraging}\n                              />\n                            ) : null,\n                          )}\n                        </AlbumGroup>\n                      )))}\n            </SectionContentsWrap>\n          </CarouselWrapper>\n        </Section>\n        <Section>\n          <SectionHeadWrap isSmallScreen={isSmallScreen}>\n            <SectionHeader isSmallScreen={isSmallScreen}>\n              <SectionTitle>인기악보 TOP10</SectionTitle>\n              {isSmallScreen && (\n                <SectionButton onClick={() => history.push('/chart')}>\n                  <SectionButtonIconWrap>\n                    <SectionButtonIcon />\n                  </SectionButtonIconWrap>\n                  <SectionButtonText>More</SectionButtonText>\n                </SectionButton>\n              )}\n            </SectionHeader>\n            <SectionMenuWrap screenWidth={screenWidth}>\n              <StyledSectionMenu\n                active={filter === 'all'}\n                onClick={() => setFilter('all')}\n              >\n                전체\n              </StyledSectionMenu>\n              <StyledSectionMenu\n                active={filter === 'daily'}\n                onClick={() => setFilter('daily')}\n              >\n                일간\n              </StyledSectionMenu>\n              <StyledSectionMenu\n                active={filter === 'week'}\n                onClick={() => setFilter('week')}\n              >\n                주간\n              </StyledSectionMenu>\n              <StyledSectionMenu\n                active={filter === 'month'}\n                onClick={() => setFilter('month')}\n              >\n                월간\n              </StyledSectionMenu>\n            </SectionMenuWrap>\n            {!isSmallScreen && (\n              <SectionButton onClick={() => history.push('/chart')}>\n                <SectionButtonIconWrap>\n                  <SectionButtonIcon />\n                </SectionButtonIconWrap>\n                <SectionButtonText>More</SectionButtonText>\n              </SectionButton>\n            )}\n          </SectionHeadWrap>\n          <CarouselWrapper>\n            <AlbumRowWrapper\n              className=\"carousel-2\"\n              screenWidth={screenWidth}\n              isAlbumOneRow={isRankOneRow}\n            >\n              {popularitiesData &&\n                (isRankOneRow\n                  ? popularitiesData.map((album, albumIndex) => (\n                      <MainSectionGrid\n                        className=\"carousel-cell\"\n                        key={`first-section-${album?.id}`}\n                        id={album?.id}\n                        rank={1 + albumIndex}\n                        title={album?.title}\n                        artist={album?.singer}\n                        image={album?.image_url}\n                        isDraging={isPopDraging}\n                      />\n                    ))\n                  : popularitiesData\n                      .reduce<[IAlbum, IAlbum][]>(\n                        (accumulator, currentValue, currentIndex, array) => {\n                          if (currentIndex < 5) {\n                            accumulator.push([\n                              currentValue,\n                              array[currentIndex + 5],\n                            ]);\n                            return accumulator;\n                          }\n                          return accumulator;\n                        },\n                        [],\n                      )\n                      .map((albums, albumGroupIndex) => (\n                        <AlbumRow\n                          className=\"carousel-cell\"\n                          key={`album-group-${albumGroupIndex}`}\n                        >\n                          {albums.map((album, albumIndex) =>\n                            album ? (\n                              <MainSectionGrid\n                                key={`first-section-${album?.id}`}\n                                id={album?.id}\n                                rank={\n                                  1 +\n                                  (albumIndex\n                                    ? albumGroupIndex + 5\n                                    : albumGroupIndex)\n                                }\n                                title={album?.title}\n                                artist={album?.singer}\n                                image={album?.image_url}\n                                isDraging={isPopDraging}\n                              />\n                            ) : null,\n                          )}\n                        </AlbumRow>\n                      )))}\n            </AlbumRowWrapper>\n          </CarouselWrapper>\n        </Section>\n      </ContentsWrap>\n    </StyledServiceWrapper>\n  );\n};\n\nexport default Root;\n\nconst ContentsWrap = styled.div`\n  width: 100%;\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 75px 0 150px 0;\n\n  @media screen and (max-width: 1300px) {\n    max-width: unset;\n    width: 90%;\n  }\n\n  @media screen and (max-width: 960px) {\n    padding-top: 80px;\n    padding-bottom: 52px;\n  }\n\n  @media screen and (max-width: 500px) {\n    padding-top: 30px;\n    padding-bottom: 31px;\n  }\n`;\n\nconst MainImageWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 120px;\n  margin-bottom: 71px;\n\n  @media screen and (max-width: 960px) {\n    margin-bottom: 50px;\n  }\n\n  @media screen and (max-width: 500px) {\n    height: 86px;\n    margin-bottom: 28px;\n  }\n`;\n\nconst MainImage = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n  border-radius: 15px;\n`;\n\nconst Section = styled.div`\n  margin-bottom: 65px;\n\n  @media screen and (max-width: 960px) {\n    padding: 31px 0;\n    padding-bottom: 0;\n    margin-bottom: 0;\n  }\n\n  @media screen and (max-width: 700px) {\n    margin-bottom: 240px;\n  }\n\n  @media screen and (max-width: 600px) {\n    margin-bottom: 150px;\n  }\n\n  @media screen and (max-width: 500px) {\n    padding: 25px 0;\n    margin-bottom: 86px;\n  }\n\n  &:last-of-type {\n    margin-bottom: 0;\n\n    @media screen and (max-width: 700px) {\n      margin-bottom: 150px;\n    }\n\n    @media screen and (max-width: 600px) {\n      margin-bottom: 0;\n    }\n  }\n`;\n\ninterface IsSmallScreen {\n  isSmallScreen?: boolean;\n}\n\nconst SectionHeadWrap = styled.div<IsSmallScreen>`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 960px) {\n    margin-bottom: 25px;\n  }\n\n  @media screen and (max-width: 700px) {\n    margin-bottom: 26px;\n  }\n\n  ${({ isSmallScreen = false }) =>\n    isSmallScreen &&\n    css`\n      flex-direction: column;\n      align-items: flex-start;\n      margin-bottom: 17px;\n    `};\n`;\n\nconst SectionHeader = styled.h2<IsSmallScreen>`\n  font-size: 24px;\n  font-weight: bold;\n  color: #1e1e1e;\n\n  html[color-mode='dark'] & {\n    color: white;\n  }\n\n  @media screen and (max-width: 500px) {\n    font-size: 18px;\n  }\n\n  ${({ isSmallScreen = false }) =>\n    isSmallScreen &&\n    css`\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n    `};\n`;\n\nconst SectionButton = styled.button`\n  display: flex;\n  align-items: center;\n  outline: 0;\n  border: 0;\n  cursor: pointer;\n  background: none;\n`;\n\nconst SectionButtonText = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  color: #1e1e1e;\n  html[color-mode='dark'] & {\n    color: white;\n  }\n\n  @media screen and (max-width: 960px) {\n    font-size: 14px;\n  }\n`;\n\nconst SectionButtonIconWrap = styled.div`\n  margin-right: 5px;\n  html[color-mode='dark'] & path {\n    fill: white;\n  }\n`;\n\ninterface IScreenWidth {\n  screenWidth?: number;\n}\n\nconst SectionMenuWrap = styled.div<IScreenWidth>`\n  display: flex;\n  margin-left: auto;\n  margin-right: 30px;\n\n  @media screen and (max-width: 960px) {\n    margin-right: 28px;\n  }\n\n  @media screen and (max-width: 700px) {\n    margin: 0 20px;\n    margin-right: 15px;\n    flex: 1;\n    max-width: 30%;\n    justify-content: space-between;\n  }\n\n  @media screen and (max-width: 500px) {\n    margin: 0;\n    flex: unset;\n    max-width: unset;\n    justify-content: flex-start;\n    background-color: rgba(0, 0, 0, 0.07);\n    margin-right: 0;\n    margin-left: -20px;\n    height: 40px;\n    margin-top: 25px;\n  }\n\n  ${({ screenWidth = 500 }) =>\n    screenWidth &&\n    css`\n      @media screen and (max-width: 500px) {\n        width: ${screenWidth}px;\n      }\n    `};\n`;\n\nconst StyledSectionMenu = styled(SectionMenu)`\n  @media screen and (max-width: 700px) {\n    margin-left: 0;\n  }\n\n  @media screen and (max-width: 500px) {\n    margin-right: 20px;\n  }\n`;\n\nconst CarouselWrapper = styled.div`\n  position: relative;\n`;\n\ninterface ISectionContentsWrap extends IScreenWidth {\n  isAlbumOneRow: boolean;\n}\n\nconst SectionContentsWrap = styled.div<ISectionContentsWrap>`\n  height: 220px;\n\n  @media screen and (max-width: 960px) {\n    height: 365px;\n  }\n\n  @media screen and (max-width: 700px) {\n    height: 124px;\n    margin-bottom: 15px;\n  }\n\n  ${({ screenWidth = 500 }) =>\n    screenWidth <= 500 &&\n    css`\n      width: ${screenWidth * 0.95}px;\n    `};\n\n  ${({ isAlbumOneRow = false }) =>\n    isAlbumOneRow &&\n    css`\n      height: 220px;\n\n      @media screen and (max-width: 960px) {\n        height: 215px;\n      }\n\n      @media screen and (max-width: 700px) {\n        height: 24px;\n        margin-bottom: 15px;\n      }\n    `};\n`;\n\nconst AlbumGroup = styled.div`\n  display: flex;\n\n  @media screen and (max-width: 960px) {\n    flex-direction: column;\n\n    & > div {\n      margin-bottom: 14px;\n    }\n  }\n`;\n\nconst SectionTitle = styled.span`\n  line-height: 1.35;\n`;\n\nconst AlbumRowWrapper = styled.div<ISectionContentsWrap>`\n  height: 456px;\n\n  @media screen and (max-width: 960px) {\n    height: 365px;\n  }\n\n  @media screen and (max-width: 700px) {\n    height: 248px;\n    margin-bottom: 15px;\n  }\n\n  ${({ screenWidth = 500 }) =>\n    screenWidth <= 500 &&\n    css`\n      width: ${screenWidth * 0.95}px;\n    `};\n\n  ${({ isAlbumOneRow = false }) =>\n    isAlbumOneRow &&\n    css`\n      height: 220px;\n\n      @media screen and (max-width: 960px) {\n        height: 211px;\n      }\n\n      @media screen and (max-width: 700px) {\n        height: 0;\n        /* margin-bottom: 15px; */\n      }\n    `};\n`;\n\nconst AlbumRow = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  & > div:first-of-type {\n    margin-bottom: 14px;\n  }\n`;\n\nconst StyledServiceWrapper = styled(ServiceWrapper)<{ isAlbumOneRow: boolean }>`\n  min-height: ${({ isAlbumOneRow }) =>\n    !isAlbumOneRow ? `calc(100vh - 88px);` : `calc(100vh - 200px)`};\n`;\n"],"sourceRoot":""}