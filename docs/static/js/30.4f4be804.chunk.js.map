{"version":3,"sources":["components/MembershipCard.tsx","pages/Membership.tsx"],"names":["CardContainer","styled","div","CardTop","CardBottom","CardTitle","h2","CardTitleInfo","span","infoActive","css","CardContentsWrap","CardContentsTitle","CardContentsDescription","CardPriceWrapper","CardPriceTitle","CardPrice","Shape","TopLeftShape","TopRightShape","BottomLeftShape","BottomRightShape","ShapeCollection","MembershipCard","title","info","infoTitle","infoDescription","price","useWindowSize","width","isSmallScreen","style","flexDirection","alignItems","marginTop","undefined","SectionTitle","List","li","Membership","useState","data","setData","isAskCancel","setIsAskCancel","isCanceled","setIsCanceled","isAskPayment","setIsAskPayment","fetchData","useCallback","a","api","get","useEffect","handleCancel","post","user_ticket_id","tickets","type","handlePayment","user_ticket_status","ticket_id","id","payurl","window","location","href","TextHeader","styleType","onClick","map","ticket","key","sub_title","contents","note","Modal","open","onClose","firstButtonLabel","onClickFirstButton","secondButtonLabel","onClickSecondButton","content"],"mappings":"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","file":"static/js/30.4f4be804.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport css from '@emotion/css';\n\nimport useWindowSize from '../utils/useWindowSize';\n\ninterface IMembershipCard {\n  title: string;\n  info: string;\n  infoActive: boolean;\n  infoTitle: string;\n  infoDescription: string;\n  price: number;\n}\n\nconst MembershipCard = ({\n  title,\n  info,\n  infoActive,\n  infoTitle,\n  infoDescription,\n  price,\n}: IMembershipCard) => {\n  const { width: screenWidth = 1980 } = useWindowSize();\n  const isSmallScreen = screenWidth <= 600;\n\n  return (\n    <CardContainer>\n      <CardTop>\n        <CardTitle>{title}</CardTitle>\n        <CardTitleInfo infoActive={infoActive}>{info}</CardTitleInfo>\n      </CardTop>\n      <CardBottom>\n        <CardContentsWrap>\n          <CardContentsTitle>{infoTitle}</CardContentsTitle>\n          <CardContentsDescription>{infoDescription}</CardContentsDescription>\n        </CardContentsWrap>\n        <CardContentsWrap\n          style={\n            isSmallScreen\n              ? {\n                  flexDirection: 'row',\n                  alignItems: 'flex-start',\n                  marginTop: 20,\n                }\n              : undefined\n          }\n        >\n          <CardPrice>월{price}원</CardPrice>\n          {isSmallScreen ? (\n            <CardPriceWrapper>\n              <CardPriceTitle>-부가세 포함</CardPriceTitle>\n              <CardPriceTitle>-매월 정기결제</CardPriceTitle>\n            </CardPriceWrapper>\n          ) : (\n            <>\n              <CardPriceTitle>-부가세 포함</CardPriceTitle>\n              <CardPriceTitle>-매월 정기결제</CardPriceTitle>\n            </>\n          )}\n        </CardContentsWrap>\n      </CardBottom>\n      <ShapeCollection />\n    </CardContainer>\n  );\n};\n\nconst CardContainer = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  width: 100%;\n  padding: 9px;\n  background-color: #cacaca;\n  overflow: hidden;\n  border-radius: 2px;\n  margin-bottom: 61px;\n\n  html[color-mode='dark'] & {\n    background-color: #2c303d;\n  }\n\n  @media screen and (max-width: 600px) {\n    padding: 12px 10px;\n  }\n`;\n\nconst CardTop = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 80px;\n  background-color: #295396;\n  box-shadow: 0 2px 11px 0 rgba(0, 0, 0, 0.09);\n  padding: 28px 50px;\n\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 24px 17px;\n    height: unset;\n  }\n`;\n\nconst CardBottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 200px;\n  background-color: #ffffff;\n  padding: 0 50px;\n\n  html[color-mode='dark'] & {\n    background-color: #191f2b;\n  }\n\n  @media screen and (max-width: 600px) {\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 17px;\n    padding-bottom: 28px;\n    height: unset;\n  }\n`;\n\nconst CardTitle = styled.h2`\n  opacity: 0.9;\n  font-size: 24px;\n  font-weight: bold;\n  line-height: 0.92;\n  color: #ffffff;\n  margin-right: 36px;\n\n  @media screen and (max-width: 600px) {\n    margin-right: 0;\n    font-size: 22px;\n    margin-bottom: 15px;\n  }\n`;\n\nconst CardTitleInfo = styled.span<{ infoActive: boolean }>`\n  opacity: 0.5;\n  font-size: 15px;\n  line-height: 1.47;\n  color: #ffffff;\n\n  ${({ infoActive }) =>\n    infoActive &&\n    css`\n      opacity: 0.8;\n    `}\n`;\n\nconst CardContentsWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  &:last-child {\n    align-items: flex-end;\n  }\n`;\n\nconst CardContentsTitle = styled.span`\n  opacity: 0.9;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.1;\n  color: #1e1e1e;\n  margin-bottom: 10px;\n\n  html[color-mode='dark'] & {\n    color: white;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 18px;\n    line-height: 1.22;\n  }\n`;\n\nconst CardContentsDescription = styled.span`\n  opacity: 0.5;\n  font-size: 14px;\n  line-height: 1.71;\n  color: #1e1e1e;\n\n  html[color-mode='dark'] & {\n    color: white;\n  }\n`;\n\nconst CardPriceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nconst CardPriceTitle = styled.span`\n  opacity: 0.8;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.57;\n  color: #1e1e1e;\n\n  html[color-mode='dark'] & {\n    color: white;\n  }\n`;\n\nconst CardPrice = styled.span`\n  font-size: 26px;\n  font-weight: 500;\n  line-height: 0.85;\n  text-align: right;\n  color: #0a62ba;\n  margin-bottom: 15px;\n\n  @media screen and (max-width: 600px) {\n    margin-bottom: 0;\n    margin-right: 25px;\n  }\n`;\n\nconst Shape = styled.span`\n  display: block;\n  position: absolute;\n  width: 60px;\n  height: 60px;\n  border-radius: 30px;\n  background-color: #cacaca;\n  html[color-mode='dark'] & {\n    background-color: #2c303d;\n  }\n`;\n\nconst TopLeftShape = styled(Shape)`\n  top: -30px;\n  left: -30px;\n`;\n\nconst TopRightShape = styled(Shape)`\n  top: -30px;\n  right: -30px;\n`;\n\nconst BottomLeftShape = styled(Shape)`\n  bottom: -30px;\n  left: -30px;\n`;\n\nconst BottomRightShape = styled(Shape)`\n  bottom: -30px;\n  right: -30px;\n`;\n\nconst ShapeCollection = () => (\n  <>\n    <TopLeftShape />\n    <TopRightShape />\n    <BottomLeftShape />\n    <BottomRightShape />\n  </>\n);\n\nexport default MembershipCard;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport TextHeader from '../components/TextHeader';\nimport {\n  StyledServiceWrapper,\n  StyledButton,\n  TopContents,\n  BottomContainer,\n  BottomContents,\n} from '../components/SectionPage';\nimport styled from '@emotion/styled';\nimport MembershipCard from '../components/MembershipCard';\nimport Modal from '../components/Modal';\nimport { api } from '../utils/api';\nimport { ITicket } from '../types';\n\ninterface IData {\n  tickets: Array<ITicket>;\n  note: string;\n}\n\nconst Membership = () => {\n  const [data, setData] = useState<IData>();\n  const [isAskCancel, setIsAskCancel] = useState(false);\n  const [isCanceled, setIsCanceled] = useState(false);\n  const [isAskPayment, setIsAskPayment] = useState(false);\n\n  const fetchData = useCallback(async () => {\n    const {\n      data: { data },\n    } = await api.get('/ticket/index');\n    setData(data);\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const handleCancel = async () => {\n    setIsAskCancel(false);\n    await api.post('/ticket/cancel', {\n      user_ticket_id: data?.tickets[0].user_ticket_id,\n      type: -1,\n    });\n    fetchData();\n    setIsCanceled(true);\n  };\n\n  const handlePayment = async () => {\n    setIsAskPayment(false);\n    if (data?.tickets[0].user_ticket_status === -1) {\n      await api.post('/ticket/cancel', {\n        user_ticket_id: data?.tickets[0].user_ticket_id,\n        type: 0,\n      });\n      fetchData();\n    } else {\n      const {\n        data: {\n          data: { payurl },\n        },\n      } = await api.post('/ticket/payapp', {\n        ticket_id: data?.tickets[0].id,\n      });\n      window.location.href = payurl;\n    }\n  };\n\n  return (\n    <>\n      <StyledServiceWrapper>\n        <TopContents>\n          <TextHeader>이용권</TextHeader>\n          <StyledButton\n            styleType={\n              data?.tickets[0].user_ticket_status === -1 ||\n              data?.tickets[0].user_ticket_status === null\n                ? 'blue'\n                : 'disabled'\n            }\n            onClick={() =>\n              data?.tickets[0].user_ticket_status === -1 ||\n              data?.tickets[0].user_ticket_status === null\n                ? setIsAskPayment(true)\n                : setIsAskCancel(true)\n            }\n          >\n            {data?.tickets[0].user_ticket_status === -1 ||\n            data?.tickets[0].user_ticket_status === null\n              ? '구매하기'\n              : '해지하기'}\n          </StyledButton>\n        </TopContents>\n        <BottomContainer>\n          <BottomContents>\n            {data?.tickets.map((ticket) => (\n              <MembershipCard\n                key={`membership-${ticket.id}`}\n                title={ticket.title}\n                info={\n                  data?.tickets[0].user_ticket_status === null\n                    ? '사용중인 이용권이 없습니다.'\n                    : data?.tickets[0].user_ticket_status === -1\n                    ? '당월 말 해지 예정입니다.'\n                    : '이용권 이용 중입니다.'\n                }\n                infoActive={true}\n                infoTitle={ticket.sub_title}\n                infoDescription={ticket.contents}\n                price={ticket.price}\n              />\n            ))}\n            <SectionTitle>이용권 유의사항</SectionTitle>\n            <ul>\n              <List> {data?.note}</List>\n            </ul>\n          </BottomContents>\n        </BottomContainer>\n      </StyledServiceWrapper>\n      <Modal\n        open={isAskPayment}\n        onClose={() => setIsAskPayment(false)}\n        firstButtonLabel=\"구매하기\"\n        onClickFirstButton={handlePayment}\n        secondButtonLabel=\"취소\"\n        onClickSecondButton={() => setIsAskPayment(false)}\n        title=\"이용권 구매하기\"\n        content={<>이용권을 구매하시겠습니까?</>}\n      />\n      <Modal\n        open={isAskCancel}\n        onClose={() => setIsAskCancel(false)}\n        firstButtonLabel=\"해지하기\"\n        onClickFirstButton={handleCancel}\n        secondButtonLabel=\"취소\"\n        onClickSecondButton={() => setIsAskCancel(false)}\n        title=\"이용권 해지하기\"\n        content={\n          <>\n            이용권을 해지하시겠습니까?\n            <br />\n            해지 시, 악보열람 기능이 제한됩니다.\n          </>\n        }\n      />\n      <Modal\n        open={isCanceled}\n        onClose={() => setIsCanceled(false)}\n        firstButtonLabel=\"확인\"\n        onClickFirstButton={() => setIsCanceled(false)}\n        title=\"이용권 해지하기\"\n        content={\n          <>\n            이용권 해지 신청이 완료되었습니다.\n            <br />\n            당월 잔여 기간동안 이용권 이용 가능합니다.\n          </>\n        }\n      />\n    </>\n  );\n};\n\nconst SectionTitle = styled.h2`\n  font-size: 20px;\n  font-weight: bold;\n  color: #1e1e1e;\n  margin-bottom: 20px;\n  html[color-mode='dark'] & {\n    color: white;\n  }\n`;\n\nconst List = styled.li`\n  opacity: 0.8;\n  font-size: 14px;\n  line-height: 1.86;\n  color: #1e1e1e;\n  white-space: pre-wrap;\n  html[color-mode='dark'] & {\n    color: white;\n  }\n`;\n\nexport default Membership;\n"],"sourceRoot":""}