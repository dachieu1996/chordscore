{"version":3,"sources":["components/Input.tsx","assets/filter-top-button-icon.svg","assets/section-button-icon.svg","assets sync /^/.*/-button/-icon/.svg$","assets/edit-button-icon.svg","utils/playlist.ts","assets/songrow-icon-1.svg","components/PlaylistModal.tsx","components/SectionMenu.ts","utils/song.ts","components/MainSongRow.tsx","assets/icons/playbutton-normal.svg","assets/icons/playbutton-hover.svg","assets/loading.svg","assets/main-banner.png","pages/Main.tsx"],"names":["Container","styled","div","error","css","IconWrap","StyledInput","input","TextArea","textarea","Input","className","icon","props","Icon","require","default","React","FilterTopButtonIcon","createElement","defaultProps","module","exports","SectionButtonIcon","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","EditButtonIcon","getPlaylist","a","api","get","playlists","data","savePlaylist","playlist_id","music_ids","post","makeNewPlaylist","name","playlist_name","SongrowIcon1","PlaylistRow","title","count","onClick","Playlist","PlaylistInfo","PlaylistWrap","span","SectionMenu","button","active","JSON","parse","song","setSelectedSong","localStorage","setItem","getSelectedSong","getItem","songId","artist","rank","visiblePlaylistButton","history","useHistory","useState","setPlaylists","isOpenPlaylistModal","setIsOpenPlaylistModal","isNewPlaylist","setIsNewPlaylist","newPlaylistName","setNewPlaylistName","PlayListIcon","useEffect","then","push","Rank","PlayButtonWrap","InfoWrap","Title","Artist","Button","stopPropagation","auth","getToken","open","onClose","firstButtonLabel","onClickFirstButton","secondButtonLabel","onClickSecondButton","content","placeholder","value","onChange","target","playlist","key","total_count","playlistId","toString","isOpacityDisabled","checked","PlaybuttonNormal","PlaybuttonHover","Loading","varUA","navigator","userAgent","match","token_","window","chordscore","postMessage","stringify","type","token","webkit","messageHandlers","autoLoginHandler","Root","useWindowSize","width","isSmallScreen","loading","setLoading","filter","setFilter","index","setIndex","useSWR","setTimeout","document","getElementById","console","log","observer","MutationObserver","mutations","forEach","mutation","el","style","transform","split","replace","Number","observe","childNodes","attributes","LoadingContainer","StyledServiceWrapper","headerPosition","bodyBackgroundColor","MainBanner","AbsoluteMainbanner","MainBannerContents","MainBannerTitle","NewSongWrap","slideClassName","enableMouseEvents","animateHeight","RankingSongs","new","slice","singer","RankingPagement","Array","fill","r","i","RankingInfo","RankingInfoContents","MoreWrap","StyledSectionMenu","MobileFilterWrap","RankingSongsWrap","popularities","ServiceWrapper"],"mappings":"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","file":"static/js/9.597e718c.chunk.js","sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport css from '@emotion/css';\n\nexport interface IInput\n  extends React.DetailedHTMLProps<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    HTMLInputElement\n  > {\n  icon?: string;\n  error?: boolean;\n}\n\nconst Input = ({ error, className, icon, ...props }: IInput) => {\n  const Icon = icon && require(`../assets/${icon}-button-icon.svg`).default;\n  return (\n    <Container error={error} className={className}>\n      {icon && (\n        <IconWrap>\n          <Icon />\n        </IconWrap>\n      )}\n      <StyledInput {...props} />\n    </Container>\n  );\n};\n\nconst Container = styled.div<{ error?: boolean }>`\n  display: flex;\n  width: 100%;\n  padding: 0 20px;\n  border-radius: 7px;\n  background-color: #ebebeb;\n  html[color-mode='dark'] & {\n    background-color: #2e3137;\n  }\n  ${({ error }) =>\n    error\n      ? css`\n          border: 1px solid #d51414;\n        `\n      : css`\n          border: 1px solid #ebebeb;\n          html[color-mode='dark'] & {\n            border: 1px solid #24272d;\n          }\n        `}\n`;\n\nconst IconWrap = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 8px;\n  html[color-mode='dark'] & path {\n    fill: white !important;\n  }\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 15px 0;\n  font-size: 15px;\n  line-height: 1.27;\n  color: #1e1e1e;\n  outline: 0;\n  background: none;\n  border: 0;\n  font-weight: 500;\n  html[color-mode='dark'] & {\n    color: white;\n    &::placeholder {\n      color: white;\n      opacity: 0.5;\n    }\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  display: flex;\n  width: 100%;\n  padding: 20px;\n  box-sizing: border-box;\n  border-radius: 7px;\n  background-color: #ebebeb;\n  font-size: 15px;\n  line-height: 1.27;\n  color: #1e1e1e;\n  outline: 0;\n  border: 0;\n  font-weight: 500;\n  resize: none;\n  html[color-mode='dark'] & {\n    color: white;\n    background-color: #2e3137;\n\n    &::placeholder {\n      color: white;\n      opacity: 0.5;\n    }\n  }\n`;\n\nexport default Input;\n","var React = require('react');\n\nfunction FilterTopButtonIcon (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"fill\":\"#1E1E1E\",\"fillRule\":\"evenodd\",\"d\":\"M18.67 1.205c-.439-.464-1.15-.464-1.59 0L7.148 11.702 1.92 6.176c-.44-.464-1.151-.464-1.59 0-.44.465-.44 1.217 0 1.681l6.023 6.366c.22.233.507.348.795.348.288 0 .576-.116.795-.348L18.671 2.886c.439-.464.439-1.217 0-1.68\",\"opacity\":\".7\"}));\n}\n\nFilterTopButtonIcon.defaultProps = {\"width\":\"19\",\"height\":\"15\",\"viewBox\":\"0 0 19 15\"};\n\nmodule.exports = FilterTopButtonIcon;\n\nFilterTopButtonIcon.default = FilterTopButtonIcon;\n","var React = require('react');\n\nfunction SectionButtonIcon (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"fill\":\"#1E1E1E\",\"fillRule\":\"evenodd\",\"d\":\"M6.597 5.403V.597C6.597.267 6.33 0 6 0c-.33 0-.597.267-.597.597v4.806H.597C.267 5.403 0 5.67 0 6c0 .33.267.597.597.597h4.806v4.806c0 .33.267.597.597.597.33 0 .597-.267.597-.597V6.597h4.806c.33 0 .597-.267.597-.597 0-.33-.267-.597-.597-.597H6.597z\"}));\n}\n\nSectionButtonIcon.defaultProps = {\"width\":\"12\",\"height\":\"12\",\"viewBox\":\"0 0 12 12\"};\n\nmodule.exports = SectionButtonIcon;\n\nSectionButtonIcon.default = SectionButtonIcon;\n","var map = {\n\t\"./edit-button-icon.svg\": 527,\n\t\"./filter-top-button-icon.svg\": 523,\n\t\"./section-button-icon.svg\": 524\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 526;","var React = require('react');\n\nfunction EditButtonIcon (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"fill\":\"#1E1E1E\",\"fillRule\":\"evenodd\",\"d\":\"M16.953 2.431L18.39 3.76c.5.468.499 1.227-.004 1.693l-.356.332-3.27-3.02.36-.333c.506-.466 1.328-.466 1.833 0zm-.084 4.427L8.065 14.99l-3.27-3.02 8.803-8.131 3.27 3.02zM6.543 15.726l-3.831 1.178 1.28-3.535 2.55 2.357zm13-13.044l-1.434-1.32c-1.144-1.054-3.006-1.054-4.151.001l-.936.87-9.911 9.149h-.036l-.086.119-.025.028-.067.062v.026l-.017.041-.041.041v.065L.643 17.862c-.1.27-.023.575.198.776.155.141.36.22.581.22h.004c.083-.002.167-.014.256-.039l6.624-2.041c.023-.005.045-.013.066-.023.015-.005.028-.011.042-.018.019-.007.037-.017.054-.028l.007-.004c.015-.007.03-.015.041-.023l.049-.034.025-.016.007-.007.025-.02c.01-.01.022-.02.034-.035L19.543 6.516c1.143-1.058 1.143-2.777 0-3.834z\",\"opacity\":\".5\"}));\n}\n\nEditButtonIcon.defaultProps = {\"width\":\"21\",\"height\":\"19\",\"viewBox\":\"0 0 21 19\"};\n\nmodule.exports = EditButtonIcon;\n\nEditButtonIcon.default = EditButtonIcon;\n","import { api } from './api';\n\nexport const getPlaylist = async () => {\n  const {\n    data: {\n      data: { playlists },\n    },\n  } = await api.get('/playlist/index');\n  return playlists;\n};\n\nexport const savePlaylist = async (playlist_id: number, music_ids: string) => {\n  await api.post('/playlist/add', { playlist_id, music_ids });\n};\n\nexport const makeNewPlaylist = async (name: string) => {\n  await api.post('/playlist/create', { playlist_name: name });\n};\n","var React = require('react');\n\nfunction SongrowIcon1 (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},React.createElement(\"path\",{\"id\":\"csdy5rey8a\",\"d\":\"M3.174 0L14.613 0 14.613 1.433 3.174 1.433z\"})),React.createElement(\"g\",{\"fill\":\"none\",\"fillRule\":\"evenodd\",\"transform\":\"translate(.8 .301)\",\"key\":1},[React.createElement(\"path\",{\"fill\":\"#1E1E1E\",\"d\":\"M16.273 7.725l-1.032 7.368c-.073.523-.546.918-1.1.918H3.646c-.554 0-1.028-.395-1.1-.918L1.514 7.725c-.088-.63.422-1.198 1.1-1.198h12.557c.668 0 1.19.558 1.1 1.198m-1.1-2.63H2.615c-1.578 0-2.8 1.325-2.592 2.819l1.032 7.369c.172 1.232 1.287 2.16 2.592 2.16H14.14c1.305 0 2.42-.928 2.592-2.16l1.032-7.37c.209-1.492-1.012-2.819-2.592-2.819M2.78 3.98h12.227c.415 0 .752-.32.752-.716 0-.396-.337-.717-.752-.717H2.78c-.415 0-.752.321-.752.717 0 .395.337.716.752.716\",\"key\":0}),React.createElement(\"path\",{\"fill\":\"#1E1E1E\",\"d\":\"M3.926 1.433h9.935c.415 0 .752-.32.752-.717 0-.395-.337-.716-.752-.716H3.926c-.415 0-.752.32-.752.716 0 .396.337.717.752.717M8.523 13.089c0 .407-.348.739-.776.739-.428 0-.776-.332-.776-.74 0-.407.348-.739.776-.739h.776v.74zm3.382-3.916L9.612 8.08c-.499-.237-1.089.108-1.089.641v2.195h-.776c-1.257 0-2.28.974-2.28 2.172 0 1.197 1.023 2.172 2.28 2.172 1.258 0 2.28-.975 2.28-2.172V9.88l1.205.573c.371.177.823.034 1.009-.32.186-.354.035-.784-.336-.961z\",\"key\":1})])]);\n}\n\nSongrowIcon1.defaultProps = {\"width\":\"19\",\"height\":\"18\",\"viewBox\":\"0 0 19 18\"};\n\nmodule.exports = SongrowIcon1;\n\nSongrowIcon1.default = SongrowIcon1;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\ninterface IPlaylistRow {\n  id: number;\n  title: string;\n  count: number;\n  onClick: (id: number) => void;\n}\n\nexport const PlaylistRow = ({\n  id,\n  title,\n  count,\n  onClick,\n}: IPlaylistRow & any) => (\n  <Playlist onClick={() => onClick(id)}>\n    <PlaylistInfo>{title}</PlaylistInfo>\n    <PlaylistInfo>{count}곡</PlaylistInfo>\n  </Playlist>\n);\n\nexport const PlaylistWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-height: 224px;\n  border-radius: 5px;\n  background-color: #f1f1f1;\n  padding: 15px;\n  overflow-x: hidden;\n  overflow-y: scroll;\n\n  html[color-mode='dark'] & {\n    background-color: rgba(216, 216, 216, 0.05);\n  }\n`;\n\nconst Playlist = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  border-radius: 7px;\n  background-color: #d8d8d8;\n  border: solid 1px #d8d8d8;\n  padding: 13px 20px;\n  margin-bottom: 15px;\n  cursor: pointer;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  html[color-mode='dark'] & {\n    background-color: #3b4352;\n    border: solid 1px #3b4352;\n  }\n\n  &:hover {\n    border: solid 1px #0a62ba;\n    background-color: #ffffff;\n\n    html[color-mode='dark'] & {\n      background-color: #2e3137;\n      border: solid 1px #0a62ba;\n    }\n  }\n`;\n\nconst PlaylistInfo = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  color: #1e1e1e;\n\n  html[color-mode='dark'] & {\n    color: white;\n  }\n\n  &:hover {\n    color: #0a62ba;\n  }\n`;\n","import styled from '@emotion/styled';\nimport css from '@emotion/css';\n\nconst SectionMenu = styled.button<{ active: boolean }>`\n  outline: 0;\n  padding: 0;\n  border: 0;\n  background: none;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  text-align: right;\n  margin-left: 50px;\n  cursor: pointer;\n  ${({ active }) =>\n    active\n      ? css`\n          color: #0a62ba !important;\n        `\n      : css`\n          color: #1e1e1e;\n          opacity: 0.5;\n          html[color-mode='dark'] & {\n            color: white;\n          }\n        `}\n  @media screen and (max-width: 960px) {\n    margin-left: 35px;\n  }\n\n  @media screen and (max-width: 700px) {\n    margin-left: 15px;\n  }\n\n  @media screen and (max-width: 500px) {\n    margin-left: 30px;\n\n    &:first-of-type {\n      margin-left: 0px;\n    }\n    ${({ active }) =>\n      active\n        ? css`\n            color: #1e1e1e;\n            html[color-mode='dark'] & {\n              color: white;\n            }\n          `\n        : css`\n            color: #1e1e1e;\n            opacity: 0.5;\n            html[color-mode='dark'] & {\n              color: white;\n            }\n          `}\n  }\n`;\n\nexport default SectionMenu;\n","const { parse } = JSON;\n\ninterface ISong {\n  setSelectedSong(song: string): void;\n  getSelectedSong(): string | null;\n}\n\nconst song: ISong = {\n  setSelectedSong(song: string){\n    return localStorage.setItem(\"selectedSong\", song);\n  },\n  getSelectedSong(){\n    return localStorage.getItem(\"selectedSong\");\n  }\n};\n\nexport default song;\n","import styled from '@emotion/styled';\nimport React, { useEffect, useState } from 'react';\nimport PlayButtonNormal from '../assets/icons/playbutton-normal.svg';\nimport PlayButtonHover from '../assets/icons/playbutton-hover.svg';\nimport { IPlaylist } from '../types';\nimport { useHistory } from 'react-router';\nimport { makeNewPlaylist, getPlaylist, savePlaylist } from '../utils/playlist';\nimport { PlaylistWrap, PlaylistRow } from './PlaylistModal';\n\nimport Modal from './Modal';\nimport Input from './Input';\nimport auth from '../utils/auth';\nimport css from '@emotion/css';\nimport song from '../utils/song';\n\ninterface MainSongRowProps {\n  songId: number | string;\n  id: string;\n  rank?: number | string;\n  title: string;\n  artist: string;\n  onClick?: () => any;\n  visiblePlaylistButton?: boolean;\n}\n\nexport default ({\n  songId,\n  id,\n  title,\n  artist,\n  rank,\n  onClick,\n  visiblePlaylistButton,\n}: MainSongRowProps) => {\n  const history = useHistory();\n  const [playlists, setPlaylists] = useState<Array<IPlaylist>>([]);\n  const [isOpenPlaylistModal, setIsOpenPlaylistModal] = useState(false);\n  const [isNewPlaylist, setIsNewPlaylist] = useState(false);\n  const [newPlaylistName, setNewPlaylistName] = useState<string>('');\n\n  const PlayListIcon = require(`../assets/songrow-icon-1.svg`).default;\n\n  const handleClick = () => {\n    song.setSelectedSong(id);\n    history.push(`/notes/${songId}`);\n  }\n\n  useEffect(() => {\n    if (isOpenPlaylistModal) {\n      getPlaylist().then((playlists) => setPlaylists(playlists));\n    }\n  }, [isOpenPlaylistModal]);\n\n  return (\n    <>\n      <Container id={id} onClick={onClick || handleClick}>\n        {rank ? (\n          <Rank>{rank}</Rank>\n        ) : (\n          <>\n            <PlayButtonWrap className=\"normal\">\n              <PlayButtonNormal />\n            </PlayButtonWrap>\n            <PlayButtonWrap className=\"hover\">\n              <PlayButtonHover />\n            </PlayButtonWrap>\n          </>\n        )}\n        <InfoWrap>\n          <Title>{title}</Title>\n          <Artist>{artist}</Artist>\n          {visiblePlaylistButton && (\n            <Button\n              onClick={(e: React.MouseEvent) => {\n                e.stopPropagation();\n                auth.getToken()\n                  ? setIsOpenPlaylistModal(true)\n                  : history.push('/playlist');\n              }}\n            >\n              <PlayListIcon />\n            </Button>\n          )}\n        </InfoWrap>\n      </Container>\n      {isOpenPlaylistModal && (\n        <Modal\n          open={isOpenPlaylistModal}\n          onClose={() => setIsOpenPlaylistModal(false)}\n          title={!isNewPlaylist ? 'PLAYLIST' : 'NEW PLAYLIST'}\n          firstButtonLabel={\n            !isNewPlaylist ? '새 플레이리스트 생성' : '생성하기'\n          }\n          onClickFirstButton={\n            isNewPlaylist\n              ? async () => {\n                  await makeNewPlaylist(newPlaylistName);\n                  const playlists = await getPlaylist();\n                  setPlaylists(playlists);\n                  setIsNewPlaylist(false);\n                }\n              : () => setIsNewPlaylist(true)\n          }\n          secondButtonLabel=\"취소\"\n          onClickSecondButton={() =>\n            isNewPlaylist\n              ? setIsNewPlaylist(false)\n              : setIsOpenPlaylistModal(false)\n          }\n          content={\n            <>\n              {!isNewPlaylist ? (\n                <PlaylistWrap>\n                  {playlists.map((playlist) => (\n                    <PlaylistRow\n                      key={`playlist-${playlist.id}`}\n                      id={playlist.id}\n                      title={playlist.name}\n                      count={playlist.total_count}\n                      onClick={async (playlistId: number) => {\n                        await savePlaylist(playlistId, songId.toString());\n                        const playlists = await getPlaylist();\n                        setPlaylists(playlists);\n                        setIsOpenPlaylistModal(false);\n                      }}\n                    />\n                  ))}\n                </PlaylistWrap>\n              ) : (\n                <StyledInput\n                  icon=\"edit\"\n                  placeholder=\"PLAYLIST 이름을 입력해주세요\"\n                  value={newPlaylistName}\n                  onChange={(e) => setNewPlaylistName(e.target.value)}\n                />\n              )}\n            </>\n          }\n        />\n      )}\n    </>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  height: 86px;\n  max-height: 86px;\n  padding: 22px 51px 22px 29px;\n  border-bottom: 1px solid rgba(120, 120, 120, 0.18);\n  cursor: pointer;\n\n  & .normal {\n    display: block;\n  }\n  & .hover {\n    display: none;\n  }\n  &:hover {\n    background-color: #1c2230;\n    border-color: #0a62ba;\n    border-width: 2px;\n    & span {\n      color: #0a62ba !important;\n      opacity: 1;\n    }\n    & .normal {\n      display: none;\n    }\n    & .hover {\n      display: block;\n    }\n    html[color-mode='light'] & {\n      background-color: rgba(41, 83, 150, 0.05);\n    }\n  }\n\n  html[color-mode='light'] & div.normal svg path {\n    fill: #1e1e1e;\n    opacity: 0.7;\n  }\n\n  @media screen and (max-width: 500px) {\n    padding: 15px;\n  }\n`;\n\nconst PlayButtonWrap = styled.div`\n  margin-right: 15px;\n`;\n\nconst Rank = styled.span`\n  min-width: 49px;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 1.07;\n  text-align: center;\n  color: #ffffff;\n  margin-right: 20px;\n  html[color-mode='light'] & {\n    color: #1e1e1e;\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  align-items: center;\n  width: 100%;\n  max-width: 50%;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 1.07;\n  color: #ffffff;\n  word-break: keep-all;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  margin-right: 30px;\n  html[color-mode='light'] & {\n    color: #1e1e1e;\n  }\n  @media screen and (max-width: 500px) {\n    max-width: 50%;\n  }\n`;\n\nconst Artist = styled.span`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 50%;\n  font-size: 13px;\n  line-height: 1.23;\n  opacity: 0.4;\n  color: #ffffff;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  margin-right: 30px;\n  html[color-mode='light'] & {\n    color: #1e1e1e;\n  }\n  @media screen and (max-width: 500px) {\n    max-width: 80%;\n  }\n`;\n\nconst StyledInput = styled(Input)`\n  margin-top: 36px;\n\n  html[color-mode='dark'] & {\n    background-color: #2e3137;\n  }\n`;\n\ninterface IButton {\n  checked?: boolean;\n  isOpacityDisabled?: boolean;\n}\nconst Button = styled.button<IButton>`\n  border: 0;\n  padding: 0;\n  outline: 0;\n  background: none;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 37px;\n  height: 37px;\n  min-width: 37px;\n  min-height: 37px;\n  background-color: rgba(74, 74, 75, 0.05);\n  border-radius: 6px;\n  margin-left: auto;\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  html[color-mode='dark'] & {\n    background-color: rgba(216, 216, 216, 0.09);\n\n    & path {\n      /* opacity: ${({ isOpacityDisabled }) =>\n    isOpacityDisabled ? 1 : 0.4} !important; */\n      fill: #ffffff !important;\n      opacity: 0.4;\n    }\n  }\n\n  ${({ checked }) =>\n    checked &&\n    css`\n      background-color: rgba(10, 98, 186, 0.69);\n      html[color-mode='dark'] & {\n        background-color: rgba(10, 10, 11, 0.35);\n        & path {\n          fill: white !important;\n          opacity: 0.53;\n        }\n      }\n    `}\n`;\n\nconst InfoWrap = styled.div`\n  width: 100%;\n  display: flex;\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n    & > *:first-of-type {\n      margin-bottom: 4px;\n    }\n  }\n`;\n","var React = require('react');\n\nfunction PlaybuttonNormal (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"defs\",{\"key\":0},[React.createElement(\"filter\",{\"id\":\"c16jcdirwa\",\"width\":\"129.4%\",\"height\":\"129.4%\",\"x\":\"-11.8%\",\"y\":\"-14.7%\",\"filterUnits\":\"objectBoundingBox\",\"key\":0},[React.createElement(\"feOffset\",{\"dx\":\"1\",\"in\":\"SourceAlpha\",\"result\":\"shadowOffsetOuter1\",\"key\":0}),React.createElement(\"feGaussianBlur\",{\"in\":\"shadowOffsetOuter1\",\"result\":\"shadowBlurOuter1\",\"stdDeviation\":\"1.5\",\"key\":1}),React.createElement(\"feColorMatrix\",{\"in\":\"shadowBlurOuter1\",\"values\":\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0\",\"key\":2})]),React.createElement(\"circle\",{\"id\":\"pjp6qzdxrb\",\"cx\":\"17\",\"cy\":\"17\",\"r\":\"17\",\"key\":1})]),React.createElement(\"g\",{\"fill\":\"none\",\"fillRule\":\"evenodd\",\"key\":1},React.createElement(\"g\",null,React.createElement(\"g\",null,[React.createElement(\"g\",{\"opacity\":\".051\",\"transform\":\"translate(-388 -522) translate(390 525)\",\"key\":0},[React.createElement(\"use\",{\"fill\":\"#000\",\"filter\":\"url(#c16jcdirwa)\",\"xlinkHref\":\"#pjp6qzdxrb\",\"key\":0}),React.createElement(\"use\",{\"fill\":\"#9CC2FF\",\"xlinkHref\":\"#pjp6qzdxrb\",\"key\":1})]),React.createElement(\"path\",{\"fill\":\"#D8D8D8\",\"d\":\"M19.878 14.032l3.55 5.323c.612.919.363 2.16-.556 2.773-.328.22-.714.336-1.109.336h-7.097c-1.105 0-2-.895-2-2 0-.395.116-.78.336-1.11l3.548-5.322c.613-.92 1.855-1.168 2.774-.555.22.147.408.335.554.555z\",\"opacity\":\".7\",\"transform\":\"translate(-388 -522) translate(390 525) rotate(90 18.214 17)\",\"key\":1})])))]);\n}\n\nPlaybuttonNormal.defaultProps = {\"width\":\"40\",\"height\":\"40\",\"viewBox\":\"0 0 40 40\"};\n\nmodule.exports = PlaybuttonNormal;\n\nPlaybuttonNormal.default = PlaybuttonNormal;\n","var React = require('react');\n\nfunction PlaybuttonHover (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"g\",{\"fill\":\"none\",\"fillRule\":\"evenodd\"},React.createElement(\"g\",null,React.createElement(\"g\",null,[React.createElement(\"g\",{\"transform\":\"translate(-388 -601) translate(390 604)\",\"key\":0},[React.createElement(\"use\",{\"fill\":\"#000\",\"filter\":\"url(#v53z7jmzja)\",\"xlinkHref\":\"#exmavw21gb\",\"key\":0}),React.createElement(\"use\",{\"fill\":\"#9CC2FF\",\"fillOpacity\":\".05\",\"xlinkHref\":\"#exmavw21gb\",\"key\":1})]),React.createElement(\"path\",{\"fill\":\"#0A62BA\",\"d\":\"M19.878 14.032l3.55 5.323c.612.919.363 2.16-.556 2.773-.328.22-.714.336-1.109.336h-7.097c-1.105 0-2-.895-2-2 0-.395.116-.78.336-1.11l3.548-5.322c.613-.92 1.855-1.168 2.774-.555.22.147.408.335.554.555z\",\"transform\":\"translate(-388 -601) translate(390 604) rotate(90 18.214 17)\",\"key\":1})]))));\n}\n\nPlaybuttonHover.defaultProps = {\"width\":\"40\",\"height\":\"40\",\"viewBox\":\"0 0 40 40\"};\n\nmodule.exports = PlaybuttonHover;\n\nPlaybuttonHover.default = PlaybuttonHover;\n","var React = require('react');\n\nfunction Loading (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"circle\",{\"cx\":\"50\",\"cy\":\"50\",\"fill\":\"none\",\"stroke\":\"#0a62ba\",\"strokeWidth\":\"3\",\"r\":\"19\",\"strokeDasharray\":\"89.5353906273091 31.845130209103033\"},React.createElement(\"animateTransform\",{\"attributeName\":\"transform\",\"type\":\"rotate\",\"repeatCount\":\"indefinite\",\"dur\":\"0.5952380952380952s\",\"values\":\"0 50 50;360 50 50\",\"keyTimes\":\"0;1\"})));\n}\n\nLoading.defaultProps = {\"style\":{\"margin\":\"auto\",\"background\":\"none\",\"display\":\"block\",\"shapeRendering\":\"auto\"},\"width\":\"134px\",\"height\":\"134px\",\"viewBox\":\"0 0 100 100\",\"preserveAspectRatio\":\"xMidYMid\"};\n\nmodule.exports = Loading;\n\nLoading.default = Loading;\n","module.exports = __webpack_public_path__ + \"static/media/main-banner.5b271000.png\";","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"@emotion/styled\";\nimport SwipeableViews from \"react-swipeable-views\";\n\nimport ServiceWrapper from \"../components/ServiceWrapper\";\nimport MainSongRow from \"../components/MainSongRow\";\nimport useSWR from \"swr\";\nimport { ISong } from \"../types\";\nimport SectionMenu from \"../components/SectionMenu\";\nimport Loading from \"../assets/loading.svg\";\nimport { useHistory } from \"react-router\";\nimport useWindowSize from \"../utils/useWindowSize\";\n\ndeclare global {\n  interface Window {\n    chordscore: any;\n    webkit: any;\n  }\n}\nvar varUA = navigator.userAgent;\n\nif (varUA.match('chordscore/Android') != null) {\n  var token_ = localStorage.getItem('token');\n  if(token_){\n    window.chordscore.postMessage(\n        JSON.stringify({ type: 'autoLogin', token: token_ }),\n    );\n  }\n\n\n} else if (varUA.match('chordscore/iOS') != null) {\n  var token_ = localStorage.getItem('token');\n  if(token_){\n    window.webkit.messageHandlers.autoLoginHandler.postMessage(token_);\n  }\n\n}\n\nconst Root: React.FC = () => {\n  const history = useHistory();\n  const { width: screenWidth = 1980 } = useWindowSize();\n  const isSmallScreen = screenWidth <= 500;\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState<string>(\"daily\");\n  const [index, setIndex] = useState<number>(0);\n  const { data } = useSWR(`/main/index?popularity_type=${filter}`);\n\n  useEffect(() => {\n    if (data) {\n      setTimeout(() => {\n        setLoading(false);\n      }, 500);\n    } else {\n      setLoading(true);\n    }\n  }, [data]);\n\n  setTimeout(() => {\n    let target = document.getElementById(\"idxSwiper\");\n    console.log(target);\n\n    var observer = new MutationObserver(function (mutations) {\n      mutations.forEach((mutation) => {\n        let el = (mutation.target as HTMLElement).style.transform;\n        if (el !== null) {\n          let style = el\n            .split(\",\")[0]\n            .replace(\"translate(\", \"\")\n            .replace(\"%\", \"\");\n          setIndex((Number(style) * -1) / 100);\n        }\n      });\n    });\n\n    if (target !== null) {\n      observer.observe(target.childNodes[0], { attributes: true });\n    }\n  });\n\n  if (loading)\n    return (\n      <LoadingContainer>\n        <Loading />\n      </LoadingContainer>\n    );\n  return (\n    <StyledServiceWrapper\n      headerPosition=\"fixed\"\n      bodyBackgroundColor=\"rgb(246,246,246)\"\n    >\n      <MainBanner>\n        <AbsoluteMainbanner>\n          <MainBannerContents>\n            <MainBannerTitle>신규 악보</MainBannerTitle>\n            {/* <MainBannerMoreInfo  onClick={() => history.push(\"recent\")}>\n              + More\n            </MainBannerMoreInfo> */}\n          </MainBannerContents>\n        </AbsoluteMainbanner>\n      </MainBanner>\n      <NewSongWrap>\n        {!isSmallScreen ? (\n          <>\n            <RankingSongs>\n              {data?.new.slice(0, 5).map((song: ISong) => (\n                <MainSongRow\n                  key={`new-${song.id}`}\n                  id={`new-${song.id}`}\n                  songId={song.id}\n                  title={song.title}\n                  artist={song.singer}\n                />\n              ))}\n            </RankingSongs>\n            <RankingSongs>\n              {data?.new.slice(5, 10).map((song: ISong) => (\n                <MainSongRow\n                  key={`new-${song.id}`}\n                  id={`new-${song.id}`}\n                  songId={song.id}\n                  title={song.title}\n                  artist={song.singer}\n                />\n              ))}\n            </RankingSongs>\n          </>\n        ) : (\n          <>\n            <SwipeableViews\n              slideClassName=\"tab-container\"\n              enableMouseEvents={true}\n              animateHeight={false}\n              id=\"idxSwiper\"\n            >\n              <RankingSongs>\n                {data?.new.slice(0, 4).map((song: ISong) => (\n                  <MainSongRow\n                    key={`new-${song.id}`}\n                    id={`new-${song.id}`}\n                    songId={song.id}\n                    title={song.title}\n                    artist={song.singer}\n                  />\n                ))}\n              </RankingSongs>\n              <RankingSongs>\n                {data?.new.slice(4, 8).map((song: ISong) => (\n                  <MainSongRow\n                    key={`new-${song.id}`}\n                    id={`new-${song.id}`}\n                    songId={song.id}\n                    title={song.title}\n                    artist={song.singer}\n                  />\n                ))}\n              </RankingSongs>\n              <RankingSongs>\n                {data?.new.slice(8, 12).map((song: ISong) => (\n                  <MainSongRow\n                    key={`new-${song.id}`}\n                    id={`new-${song.id}`}\n                    songId={song.id}\n                    title={song.title}\n                    artist={song.singer}\n                  />\n                ))}\n              </RankingSongs>\n              <RankingSongs>\n                {data?.new.slice(12, 16).map((song: ISong) => (\n                  <MainSongRow\n                    key={`new-${song.id}`}\n                    id={`new-${song.id}`}\n                    songId={song.id}\n                    title={song.title}\n                    artist={song.singer}\n                  />\n                ))}\n              </RankingSongs>\n              <RankingSongs>\n                {data?.new.slice(16, 20).map((song: ISong) => (\n                  <MainSongRow\n                    key={`new-${song.id}`}\n                    id={`new-${song.id}`}\n                    songId={song.id}\n                    title={song.title}\n                    artist={song.singer}\n                  />\n                ))}\n              </RankingSongs>\n            </SwipeableViews>\n            <RankingPagement>\n              {Array(5)\n                .fill(0)\n                .map((r, i) => {\n                  if (index === Number(i)) {\n                    return <span key={\"rankPage\" + i} className=\"active\" />;\n                  } else {\n                    return <span key={\"rankPage\" + i} />;\n                  }\n                })}\n            </RankingPagement>\n          </>\n        )}\n      </NewSongWrap>\n      <RankingInfo>\n        <RankingInfoContents>\n          <MainBannerTitle>인기악보 TOP 10</MainBannerTitle>\n          <MoreWrap>\n            {!isSmallScreen && (\n              <>\n                {/* <StyledSectionMenu\n                  active={filter === \"all\"}\n                  onClick={() => setFilter(\"all\")}\n                >\n                  전체\n                </StyledSectionMenu> */}\n                <StyledSectionMenu\n                  active={filter === \"daily\"}\n                  onClick={() => setFilter(\"daily\")}\n                >\n                  일간\n                </StyledSectionMenu>\n                <StyledSectionMenu\n                  active={filter === \"week\"}\n                  onClick={() => setFilter(\"week\")}\n                >\n                  주간\n                </StyledSectionMenu>\n                <StyledSectionMenu\n                  active={filter === \"month\"}\n                  onClick={() => setFilter(\"month\")}\n                >\n                  월간\n                </StyledSectionMenu>\n              </>\n            )}\n            {/* <MainBannerMoreInfo onClick={() => history.push(\"chart\")}>\n              + More\n            </MainBannerMoreInfo> */}\n          </MoreWrap>\n        </RankingInfoContents>\n      </RankingInfo>\n      {isSmallScreen && (\n        <MobileFilterWrap>\n          {/* <StyledSectionMenu\n            active={filter === \"all\"}\n            onClick={() => setFilter(\"all\")}\n          >\n            전체\n          </StyledSectionMenu> */}\n          <StyledSectionMenu\n            active={filter === \"daily\"}\n            onClick={() => setFilter(\"daily\")}\n          >\n            일간\n          </StyledSectionMenu>\n          <StyledSectionMenu\n            active={filter === \"week\"}\n            onClick={() => setFilter(\"week\")}\n          >\n            주간\n          </StyledSectionMenu>\n          <StyledSectionMenu\n            active={filter === \"month\"}\n            onClick={() => setFilter(\"month\")}\n          >\n            월간\n          </StyledSectionMenu>\n        </MobileFilterWrap>\n      )}\n      <RankingSongsWrap>\n        {!isSmallScreen ? (\n          <>\n            <RankingSongs>\n              {data?.popularities\n                .slice(0, 5)\n                .map((song: ISong, index: number) => (\n                  <MainSongRow\n                    key={`rank-${song.id}`}\n                    id={`rank-${song.id}`}\n                    rank={index + 1}\n                    songId={song.id}\n                    title={song.title}\n                    artist={song.singer}\n                  />\n                ))}\n            </RankingSongs>\n            <RankingSongs>\n              {data?.popularities\n                .slice(5, 10)\n                .map((song: ISong, index: number) => (\n                  <MainSongRow\n                    key={`rank-${song.id}`}\n                    id={`rank-${song.id}`}\n                    rank={index + 1 + 5}\n                    songId={song.id}\n                    title={song.title}\n                    artist={song.singer}\n                  />\n                ))}\n            </RankingSongs>\n          </>\n        ) : (\n          <SwipeableViews\n            slideClassName=\"tab-container\"\n            enableMouseEvents={true}\n            animateHeight={false}\n          >\n            <RankingSongs>\n              {data?.popularities\n                .slice(0, 5)\n                .map((song: ISong, index: number) => (\n                  <MainSongRow\n                    key={`rank-${song.id}`}\n                    id={`rank-${song.id}`}\n                    rank={index + 1}\n                    songId={song.id}\n                    title={song.title}\n                    artist={song.singer}\n                  />\n                ))}\n            </RankingSongs>\n            <RankingSongs>\n              {data?.popularities\n                .slice(5, 10)\n                .map((song: ISong, index: number) => (\n                  <MainSongRow\n                    key={`rank-${song.id}`}\n                    id={`rank-${song.id}`}\n                    rank={index + 1 + 5}\n                    songId={song.id}\n                    title={song.title}\n                    artist={song.singer}\n                  />\n                ))}\n            </RankingSongs>\n          </SwipeableViews>\n        )}\n      </RankingSongsWrap>\n    </StyledServiceWrapper>\n  );\n};\n\nexport default Root;\n\nconst StyledServiceWrapper = styled(ServiceWrapper)`\n  flex-direction: column;\n`;\n\nconst MainBanner = styled.div`\n  position: relative;\n  width: 100%;\n  height: 300px;\n  background-image: url(${require(\"../assets/main-banner.png\")});\n  background-size: cover;\n  background-repeat: no-repeat;\n  @media screen and (max-width: 500px) {\n    height: 200px;\n  }\n`;\n\nconst AbsoluteMainbanner = styled.div`\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: linear-gradient(\n    to bottom,\n    rgba(238, 238, 238, 0) -40%,\n    rgba(0, 0, 0, 0.288)\n  );\n\n  html[color-mode=\"light\"] & {\n    background-image: linear-gradient(\n      to bottom,\n      rgba(238, 238, 238, 0) -40%,\n      rgba(0, 0, 0, 0.5)\n    );\n  }\n`;\n\nconst MainBannerContents = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  max-width: 1200px;\n  width: 100%;\n  padding: 50px 0;\n  margin: auto auto 0 auto;\n  @media screen and (max-width: 960px) {\n    align-items: center;\n    padding: 40px;\n  }\n`;\n\nconst MainBannerTitle = styled.div`\n  font-size: 26px;\n  font-weight: bold;\n  line-height: 1.35;\n  color: #ffffff;\n  @media screen and (max-width: 960px) {\n    font-size: 18px;\n  }\n`;\n\nconst MainBannerMoreInfo = styled.span`\n  font-size: 16px;\n  font-weight: bold;\n  line-height: 1.63;\n  text-align: right;\n  color: #ffffff;\n  cursor: pointer;\n  @media screen and (max-width: 960px) {\n    font-size: 14px;\n  }\n`;\n\nconst NewSongWrap = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 1200px;\n  margin: 20px auto 80px auto;\n  @media screen and (max-width: 960px) {\n    flex-direction: column;\n    padding: 0 20px;\n  }\n  & .tab-container {\n    display: flex;\n  }\n`;\n\nconst RankingInfo = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100px;\n  padding: 35px;\n  object-fit: contain;\n  background-color: rgb(34, 39, 50);\n  html[color-mode=\"light\"] & {\n    background-color: #acacac;\n  }\n  @media screen and (max-width: 960px) {\n    padding: 35px 40px;\n    height: auto;\n  }\n  @media screen and (max-width: 500px) {\n    padding: 20px;\n    height: auto;\n  }\n`;\n\nconst RankingInfoContents = styled(MainBannerContents)`\n  justify-content: space-between;\n  margin: 0 auto;\n  padding: 0;\n  @media screen and (max-width: 960px) {\n    padding: 0;\n    align-items: center;\n  }\n`;\n\nconst RankingSongsWrap = styled(NewSongWrap)``;\n\nconst RankingSongs = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  margin-right: 20px;\n  &:last-child {\n    margin-right: 0;\n  }\n  @media screen and (max-width: 960px) {\n    margin: 0;\n  }\n`;\n\nconst RankingPagement = styled.div`\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & span {\n    width: 5px;\n    min-width: 5px;\n    height: 5px;\n    border-radius: 50%;\n    background: #fff;\n    opacity: 0.5;\n    margin: 0 4px;\n\n    &.active {\n      opacity: 1;\n    }\n  }\n`;\n\nconst MoreWrap = styled.div`\n  display: flex;\n`;\n\nconst StyledSectionMenu = styled(SectionMenu)`\n  margin: 0;\n  margin-right: 50px;\n  html[color-mode=\"light\"] & {\n    color: white;\n    opacity: 1;\n  }\n  @media screen and (max-width: 960px) {\n    margin: 0;\n    margin-right: 30px;\n  }\n`;\n\nconst LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst MobileFilterWrap = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 13px 20px;\n  background-color: rgb(27, 30, 39);\n  html[color-mode=\"light\"] & {\n    background-color: rgb(197, 197, 197);\n  }\n`;\n"],"sourceRoot":""}