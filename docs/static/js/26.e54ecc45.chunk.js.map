{"version":3,"sources":["styles/pages/Support.style.ts","pages/SupportPost.tsx"],"names":["ContentsWrap","styled","div","StyledHeader","Header","Box","Label","span","InputContainer","StyledInput","input","StyledTextArea","withComponent","BottomWrap","StyledButton","Button","TextButton","Link","OutlinedBox","SectionTitle","SectionInfo","SectionContents","SupportPost","history","useHistory","params","useParams","useState","data","setData","useEffect","a","api","get","inquiry_id","postIdx","inquiry","fetchData","title","created_at","slice","contents","status","answer_date","answer","styleType","onClick","goBack"],"mappings":"y3GAKO,IAAMA,EAAeC,IAAOC,IAAV,KAkBZC,EAAeF,YAAOG,IAAPH,CAAH,KAYZI,EAAMJ,IAAOC,IAAV,KAgBHI,EAAQL,IAAOM,KAAV,KAmBLC,EAAiBP,IAAOC,IAAV,KAkBdO,EAAcR,IAAOS,MAAV,KA0BXC,EAAiBV,YAAOQ,EAAYG,cAAc,YAAjCX,CAAH,KAEdY,EAAaZ,IAAOC,IAAV,KAMVY,EAAeb,YAAOc,IAAPd,CAAH,KAqBZe,EAAaf,YAAOgB,IAAPhB,CAAH,M,2qDClIvB,IA+CMI,EAAMJ,IAAOC,IAAV,KAkBHgB,EAAcjB,YAAOI,EAAPJ,CAAH,KAUXkB,EAAelB,IAAOM,KAAV,KAgBZa,EAAcnB,IAAOM,KAAV,KAaXc,EAAkBpB,IAAOM,KAAV,KAeNe,UAvHK,WAAO,IAAD,EAClBC,EAAUC,cACVC,EAASC,cAFS,EAGAC,qBAHA,mBAGjBC,EAHiB,KAGXC,EAHW,KAmBxB,OAdAC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,sEAKNC,IAAIC,IAAI,kBAAmB,CACnCR,OAAQ,CAAES,WAAU,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAQU,WANhB,gBAGJC,EAHI,EAEdR,KACEA,KAAQQ,QAKZP,EAAQO,GARQ,2CAAH,qDAUfC,KACC,CAACZ,IAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,iCACA,kBAACpB,EAAD,KACE,kBAACc,EAAD,YAAeS,QAAf,IAAeA,OAAf,EAAeA,EAAMU,OACrB,kBAAClB,EAAD,YAAcQ,QAAd,IAAcA,OAAd,EAAcA,EAAMW,WAAWC,MAAM,EAAG,KACxC,kBAACnB,EAAD,YAAkBO,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMa,YAErB,OAAJb,QAAI,IAAJA,OAAA,EAAAA,EAAMc,QACL,kBAACxB,EAAD,KACE,kBAACC,EAAD,8CACA,kBAACC,EAAD,oCACSQ,QADT,IACSA,GADT,UACSA,EAAMe,mBADf,aACS,EAAmBH,MAAM,EAAG,KAErC,kBAACnB,EAAD,YAAkBO,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAMgB,SAExB,KACJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcC,UAAU,OAAOC,QAAS,kBAAMvB,EAAQwB,WAAtD","file":"static/js/26.e54ecc45.chunk.js","sourcesContent":["import styled from '@emotion/styled';\nimport Header from '../../components/TextHeader';\nimport Button from '../../components/Button';\nimport { Link } from 'react-router-dom';\n\nexport const ContentsWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 1100px;\n  margin: 0 auto;\n  padding: 75px 0;\n\n  @media screen and (max-width: 1100px) {\n    width: 90%;\n    max-width: unset;\n  }\n\n  @media screen and (max-width: 500px) {\n    padding: 50px 0;\n  }\n`;\n\nexport const StyledHeader = styled(Header)`\n  margin-bottom: 54px;\n\n  @media screen and (max-width: 500px) {\n    margin-bottom: 11px;\n\n    &.alignedCenter {\n      text-align: center;\n    }\n  }\n`;\n\nexport const Box = styled.div`\n  border-radius: 15px;\n  background-color: #ebebeb;\n  padding: 50px;\n  margin-bottom: 50px;\n\n  html[color-mode='dark'] & {\n    background-color: #24272d;\n  }\n\n  @media screen and (max-width: 500px) {\n    padding: 31px 20px;\n    margin-bottom: 24px;\n  }\n`;\n\nexport const Label = styled.span`\n  display: block;\n  font-size: 16px;\n  font-weight: bold;\n  line-height: 1.38;\n  color: #1e1e1e;\n  margin-bottom: 15px;\n\n  html[color-mode='dark'] & {\n    color: white;\n  }\n\n  @media screen and (max-width: 500px) {\n    opacity: 0.9;\n    font-size: 14px;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const InputContainer = styled.div`\n  border-radius: 7px;\n  background-color: #ffffff;\n  padding: 20px 30px;\n  margin-bottom: 43px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n  html[color-mode='dark'] & {\n    background-color: rgba(216, 216, 216, 0.05);\n  }\n\n  @media screen and (max-width: 500px) {\n    padding: 15px 20px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  width: 100%;\n  font-size: 16px;\n  line-height: 1.13;\n  outline: 0;\n  border: 0;\n  background: none;\n\n  &::placeholder {\n    color: #666666;\n  }\n\n  html[color-mode='dark'] & {\n    color: white;\n\n    &::placeholder {\n      color: #ffffff;\n      opacity: 0.6;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    font-size: 14px;\n  }\n`;\n\nexport const StyledTextArea = styled(StyledInput.withComponent('textarea'))``;\n\nexport const BottomWrap = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledButton = styled(Button)`\n  max-width: 240px;\n  margin-right: 40px;\n\n  @media screen and (max-width: 960px) {\n    width: 339px;\n    max-width: unset;\n    padding: 16px 0;\n  }\n\n  @media screen and (max-width: 500px) {\n    max-width: unset;\n    width: 100%;\n    margin-right: 0;\n\n    &:first-of-type {\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport const TextButton = styled(Link)`\n  opacity: 0.5;\n  font-size: 16px;\n  font-weight: bold;\n  line-height: 1.38;\n  color: #1e1e1e;\n\n  html[color-mode='dark'] & {\n    color: white;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport ServiceWrapper from '../components/ServiceWrapper';\nimport {\n  ContentsWrap,\n  StyledHeader,\n  StyledButton,\n  BottomWrap,\n} from '../styles/pages/Support.style';\nimport styled from '@emotion/styled';\nimport { useHistory, useParams } from 'react-router';\nimport { api } from '../utils/api';\nimport { IInquiry } from '../types';\n\nconst SupportPost = () => {\n  const history = useHistory();\n  const params = useParams<{ postIdx: string }>();\n  const [data, setData] = useState<IInquiry>();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data: {\n          data: { inquiry },\n        },\n      } = await api.get('/inquiry/detail', {\n        params: { inquiry_id: params?.postIdx },\n      });\n      setData(inquiry);\n    };\n    fetchData();\n  }, [params]);\n\n  return (\n    <ServiceWrapper>\n      <ContentsWrap>\n        <StyledHeader>문의내용</StyledHeader>\n        <Box>\n          <SectionTitle>{data?.title}</SectionTitle>\n          <SectionInfo>{data?.created_at.slice(0, 10)}</SectionInfo>\n          <SectionContents>{data?.contents}</SectionContents>\n        </Box>\n        {data?.status ? (\n          <OutlinedBox>\n            <SectionTitle>답변드립니다.</SectionTitle>\n            <SectionInfo>\n              관리자 | {data?.answer_date?.slice(0, 10)}\n            </SectionInfo>\n            <SectionContents>{data?.answer}</SectionContents>\n          </OutlinedBox>\n        ) : null}\n        <BottomWrap>\n          <StyledButton styleType=\"blue\" onClick={() => history.goBack()}>\n            뒤로\n          </StyledButton>\n        </BottomWrap>\n      </ContentsWrap>\n    </ServiceWrapper>\n  );\n};\n\nconst Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  border-radius: 15px;\n  padding: 50px;\n  margin-bottom: 30px;\n  background-color: #f6f6f6;\n  html[color-mode='dark'] & {\n    background-color: #24272d;\n  }\n\n  @media screen and (max-width: 500px) {\n    padding: 25px 20px;\n    margin-bottom: 15px;\n  }\n`;\n\nconst OutlinedBox = styled(Box)`\n  background-color: #ffffff;\n  border: solid 2px rgba(10, 98, 186, 0.62);\n  margin-bottom: 70px;\n  html[color-mode='dark'] & {\n    border: solid 1px #0a62ba;\n    background-color: #1c2230;\n  }\n`;\n\nconst SectionTitle = styled.span`\n  display: block;\n  font-size: 22px;\n  font-weight: bold;\n  color: #1e1e1e;\n  margin-bottom: 11px;\n  html[color-mode='dark'] & {\n    color: white;\n  }\n\n  @media screen and (max-width: 500px) {\n    font-size: 16px;\n    margin-bottom: 15px;\n  }\n`;\n\nconst SectionInfo = styled.span`\n  margin-bottom: 40px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.29;\n  color: #666666;\n\n  @media screen and (max-width: 500px) {\n    font-size: 13px;\n    margin-bottom: 20px;\n  }\n`;\n\nconst SectionContents = styled.span`\n  opacity: 0.8;\n  font-size: 14px;\n  line-height: 1.57;\n  color: #1e1e1e;\n  html[color-mode='dark'] & {\n    color: white;\n  }\n\n  @media screen and (max-width: 500px) {\n    font-size: 13px;\n    line-height: 1.38;\n  }\n`;\n\nexport default SupportPost;\n"],"sourceRoot":""}